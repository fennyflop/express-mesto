{"version":3,"sources":["images/logo.svg","components/Header/Header.js","contexts/CurrentUserContext.js","components/Card/Card.js","components/Main/Main.js","components/Footer/Footer.js","components/PopupWithForm/PopupWithForm.js","components/ImagePopup/ImagePopup.js","components/EditAvatarPopup/EditAvatarPopup.js","components/EditProfilePopup/EditProfilePopup.js","components/AddPlacePopup/AddPlacePopup.js","utils/api.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onLike","onDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","cardDeleteButtonClass","cardLikeButtonClassName","aria-label","onClick","name","link","length","Main","props","cards","avatar","type","onEditAvatar","about","id","onEditProfile","onAddPlace","map","Footer","PopupWithForm","isOpen","title","children","onClose","ImagePopup","EditAvatarPopup","avatarRef","useRef","onSubmit","event","preventDefault","onUpdateAvatar","current","value","noValidate","autoComplete","placeholder","required","minLength","ref","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","maxLength","onChange","target","AddPlacePopup","setTitle","setLink","onAddCard","e","api","config","this","_baseUrl","baseUrl","_token","token","_headers","headers","fetch","authorization","then","res","_handleOriginalResponse","job","method","body","JSON","stringify","avatarInput","ok","json","Promise","reject","status","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","selectedCard","setSelectedCard","closeAllPopups","setCurrentUser","setCards","getInitialsInfo","catch","console","log","getInitialCards","Provider","deleteCard","newCards","filter","c","handleLike","newCard","postProfile","postAvatar","postCard","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c378a641.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.c2821b38.svg\";","import React, { Component } from 'react';\r\nimport logo from '../../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип веб=сайта\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();\r\n","import React from \"react\";\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction Card({ card, onCardClick, onLike, onDelete }) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    if (!card) {\r\n        return null;\r\n    }\r\n\r\n    const isOwn = card.owner._id === currentUser._id;\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n\r\n\r\n    const cardDeleteButtonClass = (\r\n        `gallery__delete-button ${isOwn ? '' : 'gallery__delete-button_display_none'}`\r\n    )\r\n\r\n    const cardLikeButtonClassName = `gallery__like-button ${isLiked ? 'gallery__like-button_liked' : ''}`;\r\n\r\n    function handleClick() {\r\n        onCardClick(card);\r\n    }\r\n\r\n    function handleLike() {\r\n        onLike(card);\r\n    }\r\n\r\n    function handleDelete() {\r\n        onDelete(card);\r\n    }\r\n\r\n    return (\r\n        <div className=\"gallery__item\">\r\n            <button className={cardDeleteButtonClass} aria-label=\"Удалить карточку\" onClick={handleDelete}></button>\r\n            <img className=\"popup__open gallery__item-image\" alt={card.name}\r\n                src={card.link} onClick={handleClick} />\r\n            <div className=\"gallery__item-description\">\r\n                <h2 className=\"gallery__item-title\">{card.name}</h2>\r\n                <div className=\"gallery__like-container\">\r\n                    <button className={cardLikeButtonClassName} onClick={handleLike} aria-label=\"Поставить лайк\"></button>\r\n                    <p className=\"gallery__like-counter\">{card.likes.length}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/Card';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nfunction Main(props) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    if (!currentUser || !props.cards) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"profile\">\r\n                <div className=\"profile__info\">\r\n                    <div className=\"profile__avatar-container\">\r\n                        <img className=\"profile__avatar\" alt=\"Аватарка пользователя\" src={currentUser.avatar} />\r\n                        <button className=\"profule__button profile__button_action_edit-avatar\" type=\"button\" aria-label=\"Редактировать аватар профиля\" onClick={props.onEditAvatar}>\r\n\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"profile__part\">\r\n                        <div className=\"profile__initials\">\r\n                            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n                            <p className=\"profile__job\">{currentUser.about}</p>\r\n                        </div>\r\n                        <button className=\"profile__button popup__open profile__button_action_edit\" id=\"popupEdit\" type=\"button\"\r\n                            aria-label=\"Редактировать профиль\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                </div>\r\n                <button className=\"profile__button popup__open profile__button_action_add\" id=\"popupAdd\" type=\"button\"\r\n                    aria-label=\"Кнопка\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"gallery\">\r\n                {props.cards.map((card) => {\r\n                    return (<Card onDelete={props.onDelete} onLike={props.onLike} onCardClick={props.onCardClick} key={card._id} card={card}></Card>)\r\n                })}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&#169; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React, { useState, useEffect } from 'react';\r\n\r\nfunction PopupWithForm(props) {\r\n    return (\r\n        <section className={`popup popup__${props.name} ${props.isOpen ? 'popup__opened' : ''}`}>\r\n            <div className=\"popup__container\">\r\n                <p className=\"popup__title\">{props.title}</p>\r\n                {props.children}\r\n                <button onClick={props.onClose} className=\"popup__close-button popup__edit-close\" type=\"button\" aria-label=\"Закрыть форму\"></button>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({ card, onClose }) {\r\n    return (\r\n        <section className={`popup zoom ${card !== null ? 'popup__opened' : ''}`}>\r\n            <div className=\"zoom__container\">\r\n                <button className=\"popup__close-button zoom__close-button\" type=\"button\" aria-label=\"Закрыть форму\" onClick={onClose} ></button>\r\n                <img className=\"zoom__image\" alt={card !== null ? card.name : ''} src={card !== null ? card.link : ''} />\r\n                <h2 className=\"zoom__title\">{card !== null ? card.name : ''}</h2>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","import React from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nexport default function EditAvatarPopup(props) {\r\n\r\n    const avatarRef = React.useRef();\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        props.onUpdateAvatar(avatarRef.current.value);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm onClose={props.onClose} isOpen={props.isOpen} title=\"Обновить аватар\" name=\"edit_action_avatar\">\r\n            <form className=\"form form__edit-avatar\" onSubmit={handleSubmit} noValidate>\r\n                <input autoComplete=\"off\" className=\"form__item form__item_action_edit-avatar\" type=\"url\" name=\"avatar\"\r\n                    placeholder=\"Сслыка на аватар\" required minLength=\"2\" id=\"name\" ref={avatarRef} />\r\n                <span className=\"form__input-error\" id=\"name-error\"></span>\r\n                <button type=\"submit\" className=\"form__submit-button\" aria-label=\"Отправить форму\">Сохранить</button>\r\n            </form>\r\n        </PopupWithForm>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\n\r\nexport default function EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n\r\n    // Контекст\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    // Имя и подробная информация \r\n    const [name, setName] = useState();\r\n    const [description, setDescription] = useState();\r\n\r\n    // Установление информации каждый раз когда обновляется контекст currentUser\r\n\r\n    useEffect(() => {\r\n        if (!currentUser) {\r\n            return;\r\n        }\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about);\r\n    }, [currentUser])\r\n\r\n    // Операторы изменений\r\n\r\n    function handleNameChange(event) {\r\n        setName(event.target.value);\r\n    }\r\n\r\n    function handleDescriptionChange(event) {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    // Обработчик формы\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        onUpdateUser(name, description);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm onClose={onClose} isOpen={isOpen} title=\"Редактировать профиль\" name=\"edit\">\r\n            <form className=\"form form__edit\" onSubmit={handleSubmit} noValidate>\r\n                <input autoComplete=\"off\" className=\"form__item form__item_action_edit-name\" type=\"text\" name=\"name\"\r\n                    placeholder=\"Имя\" required minLength=\"2\" maxLength=\"40\" id=\"name\" onChange={handleNameChange} value={name} />\r\n                <span className=\"form__input-error\" id=\"name-error\"></span>\r\n                <input autoComplete=\"off\" className=\"form__item form__item_action_edit-job\" type=\"text\" name=\"job\" required\r\n                    placeholder=\"Род занятий\" minLength=\"2\" maxLength=\"200\" id=\"info\" onChange={handleDescriptionChange} value={description} />\r\n                <span className=\"form__input-error\" id=\"info-error\"></span>\r\n                <button type=\"submit\" className=\"form__submit-button\" id=\"editSubmiter\" aria-label=\"Отправить форму\">Сохранить</button>\r\n            </form>\r\n        </PopupWithForm>\r\n    );\r\n}","import React, { useState } from 'react';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\n\r\nexport default function AddPlacePopup(props) {\r\n\r\n    const [title, setTitle] = useState();\r\n    const [link, setLink] = useState();\r\n\r\n    function handleTitleChange(e) {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    function handleLinkChange(e) {\r\n        setLink(e.target.value);\r\n    }\r\n\r\n    function handleSubmit(event) {\r\n        event.preventDefault();\r\n        // props.onAddCard(title, link);\r\n        props.onAddCard(title, link);\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm onClose={props.onClose} isOpen={props.isOpen} title=\"Добавить карточку\" name=\"card\">\r\n            <form className=\"form form__card\" onSubmit={handleSubmit} noValidate>\r\n                <input autoComplete=\"off\" className=\"form__item form__item_action_edit-title\" type=\"text\" name=\"title\"\r\n                    placeholder=\"Название\" required minLength=\"2\" maxLength=\"30\" id=\"card-title\" onChange={handleTitleChange} />\r\n                <span className=\"form__input-error\" id=\"card-title-error\"></span>\r\n                <input autoComplete=\"off\" className=\"form__item form__item_action_edit-link\" type=\"url\" name=\"link\"\r\n                    required placeholder=\"Ссылка на картинку\" id=\"card\" onChange={handleLinkChange} />\r\n                <span className=\"form__input-error\" id=\"card-error\"></span>\r\n                <button type=\"submit\" className=\"form__submit-button\" id=\"card-submit\"\r\n                    aria-label=\"Отправить форму\">Сохранить</button>\r\n            </form>\r\n        </PopupWithForm>\r\n    );\r\n}","class Api { // У меня вроде бы всё работает\r\n    constructor(config) {\r\n        this._baseUrl = config.baseUrl;\r\n        this._token = config.token;\r\n        this._headers = config.headers;\r\n    }\r\n\r\n    // Получает первоначальные карточки\r\n\r\n    getInitialCards() {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            headers: {\r\n                authorization: this._token,\r\n            },\r\n        })\r\n            .then(res => {\r\n                return this._handleOriginalResponse(res);\r\n            })\r\n    }\r\n\r\n    // Получиает информацию\r\n\r\n    getInitialsInfo() {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            headers: {\r\n                authorization: this._token,\r\n            },\r\n        })\r\n            .then(res => {\r\n                return this._handleOriginalResponse(res);\r\n            })\r\n    }\r\n\r\n    // Patching profile\r\n\r\n    postProfile(name, job) {\r\n        return fetch(`${this._baseUrl}/users/me`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                authorization: this._token,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                name: name,\r\n                about: job,\r\n            }),\r\n        }).then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n\r\n    // Patching the avatar\r\n\r\n    postAvatar(avatarInput) {\r\n        return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n            method: \"PATCH\",\r\n            headers: {\r\n                authorization: this._token,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: avatarInput,\r\n            }),\r\n        }).then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n\r\n    handleLike(id, isLiked) {\r\n        if (!isLiked) {\r\n            return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n                method: \"DELETE\",\r\n                headers: {\r\n                    authorization: this._token,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }).then((res) => {\r\n                return this._handleOriginalResponse(res);\r\n            });\r\n        } else {\r\n            return fetch(`${this._baseUrl}/cards/likes/${id}`, {\r\n                method: \"PUT\",\r\n                headers: {\r\n                    authorization: this._token,\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n            }).then((res) => {\r\n                return this._handleOriginalResponse(res);\r\n            });\r\n        }\r\n    }\r\n\r\n    // Card deletion\r\n\r\n    deleteCard(id) {\r\n        return fetch(`${this._baseUrl}/cards/${id}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                authorization: this._token,\r\n            },\r\n        }).then((res) => {\r\n            return this._handleOriginalResponse(res);\r\n        })\r\n    }\r\n\r\n    // Добавить карточку\r\n\r\n    postCard(title, link) {\r\n        return fetch(`${this._baseUrl}/cards`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                authorization: this._token,\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify({\r\n                name: title,\r\n                link: link,\r\n            }),\r\n        })\r\n            .then(res => {\r\n                return this._handleOriginalResponse(res);\r\n            })\r\n    }\r\n\r\n    _handleOriginalResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        }\r\n\r\n        return Promise.reject(`Error: ${res.status}`);\r\n    }\r\n}\r\n\r\nconst api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-17\",\r\n    headers: { \"Content-Type\": \"applicationes/json\" },\r\n    token: \"16bbf0d2-da12-4d9c-809d-74b46ac64585\",\r\n});\r\n\r\nexport default api;","import React, { useEffect, useState } from 'react';\r\nimport Header from '../Header/Header';\r\nimport Main from '../Main/Main';\r\nimport Footer from '../Footer/Footer';\r\nimport PopupWithForm from '../PopupWithForm/PopupWithForm';\r\nimport ImagePopup from '../ImagePopup/ImagePopup';\r\nimport EditAvatarPopup from '../EditAvatarPopup/EditAvatarPopup';\r\nimport EditProfilePopup from '../EditProfilePopup/EditProfilePopup';\r\nimport AddPlacePopup from '../AddPlacePopup/AddPlacePopup';\r\nimport { CurrentUserContext } from '../../contexts/CurrentUserContext';\r\nimport api from '../../utils/api';\r\n\r\nfunction App() {\r\n\r\n  // Статуcы попапов  и функции попапов\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState(null);\r\n\r\n  function onEditProfile() {\r\n    setIsEditProfilePopupOpen(!isEditProfilePopupOpen);\r\n  }\r\n\r\n  function onAddPlace() {\r\n    setIsAddPlacePopupOpen(!isAddPlacePopupOpen);\r\n  }\r\n\r\n\r\n  function onEditAvatar() {\r\n    setIsEditAvatarPopupOpen(!isEditAvatarPopupOpen);\r\n  }\r\n\r\n  function closeAllPopups() {\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setSelectedCard(null);\r\n  }\r\n\r\n  // Текующий пользователь и все карточки\r\n\r\n  const [currentUser, setCurrentUser] = useState();\r\n  const [cards, setCards] = useState();\r\n\r\n  useEffect(() => {\r\n    // Получаем инициалы пользователя при заходе\r\n    api.getInitialsInfo()\r\n      .then((res) => {\r\n        setCurrentUser(res);\r\n      }).catch((res) => {\r\n        console.log(res);\r\n      })\r\n    // Получаем первоначальные карточки\r\n    api.getInitialCards()\r\n      .then((res) => {\r\n        setCards(res);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      })\r\n  }, []);\r\n\r\n  // Функции, которые редактируют/добавляют информацию\r\n\r\n  function handleUpdateUser(name, about) {\r\n    api.postProfile(name, about)\r\n      .then(() => {\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          name: name,\r\n          about: about,\r\n        });\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      })\r\n  }\r\n\r\n  function handleUpdateAvatar(link) {\r\n    api.postAvatar(link)\r\n      .then(() => {\r\n        setCurrentUser({\r\n          ...currentUser,\r\n          avatar: link\r\n        });\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      })\r\n  }\r\n\r\n  function handleAddCard(title, link) {\r\n    api.postCard(title, link)\r\n      .then((card) => {\r\n        setCards([card, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      })\r\n  }\r\n\r\n  // Операторы с карточками\r\n\r\n  function handleCardLike(card) {\r\n    const isLiked = card.likes.some((i) => i._id === currentUser._id);\r\n    api.handleLike(card._id, !isLiked)\r\n      .then((newCard) => {\r\n        const newCards = cards.map((c) => c._id === card._id ? newCard : c);\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      })\r\n  }\r\n\r\n  function handleCardDelete(card) {\r\n    api.deleteCard(card._id)\r\n      .then(() => {\r\n        const newCards = cards.filter((c) => c._id !== card._id);\r\n        setCards(newCards);\r\n      })\r\n      .catch((res) => {\r\n        console.log(res);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CurrentUserContext.Provider value={currentUser}>\r\n        <Header />\r\n        <Main onDelete={handleCardDelete} onLike={handleCardLike} cards={cards} onCardClick={setSelectedCard} onEditProfile={onEditProfile} onAddPlace={onAddPlace} onEditAvatar={onEditAvatar}> </Main>\r\n        <Footer> </Footer>\r\n        <EditProfilePopup onUpdateUser={handleUpdateUser} onClose={closeAllPopups} isOpen={isEditProfilePopupOpen} title=\"Редактировать профиль\" name=\"edit\">\r\n        </EditProfilePopup>\r\n        <EditAvatarPopup onUpdateAvatar={handleUpdateAvatar} onClose={closeAllPopups} isOpen={isEditAvatarPopupOpen}>\r\n        </EditAvatarPopup>\r\n        <AddPlacePopup onAddCard={handleAddCard} onClose={closeAllPopups} isOpen={isAddPlacePopupOpen}></AddPlacePopup>\r\n        <PopupWithForm onClose={closeAllPopups} title=\"Вы уверены?\" name=\"confirmation\">\r\n          <form className=\"form confirmation__form\">\r\n            <button type=\"submit\" className=\"form__submit-button confirmation__button\" id=\"card-submit\"\r\n              aria-label=\"Отправить форму\">Да</button>\r\n          </form>\r\n        </PopupWithForm>\r\n        <ImagePopup onClose={closeAllPopups} card={selectedCard}> </ImagePopup>\r\n      </CurrentUserContext.Provider>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}